<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddAppBarButton.Label" xml:space="preserve">
    <value>help</value>
  </data>
  <data name="BasicMapHeader.Text" xml:space="preserve">
    <value>BASIC MAP SAMPLE</value>
  </data>
  <data name="MenuHeader1.Text" xml:space="preserve">
    <value>WINDOWS PHONE 8.1 MAPPING</value>
  </data>
  <data name="NavigationFailedExceptionMessage" xml:space="preserve">
    <value>Navigation failed.</value>
  </data>
  <data name="tbBasicMapDisplayDescription.Text" xml:space="preserve">
    <value>Shows a basic map centered around the user's current location.</value>
  </data>
  <data name="tbBasicMapDisplayTitle.Text" xml:space="preserve">
    <value>Basic Map Display</value>
  </data>
  <data name="tbDefaultImageDescription.Text" xml:space="preserve">
    <value>Uses the Map Controls default image to point to a location.</value>
  </data>
  <data name="tbDefaultImageTitle.Text" xml:space="preserve">
    <value>Add a Default Image</value>
  </data>
  <data name="YouAreHere" xml:space="preserve">
    <value>You are here</value>
  </data>
  <data name="tbAddressToGeopointHeader.Text" xml:space="preserve">
    <value>Enter an Address</value>
  </data>
  <data name="ControlsHeader.Text" xml:space="preserve">
    <value>ADD CONTROLS TO A MAP</value>
  </data>
  <data name="CustomImageHeader.Text" xml:space="preserve">
    <value>ADD A CUSTOM IMAGE TO A MAP</value>
  </data>
  <data name="abbDirections.Label" xml:space="preserve">
    <value>Directions</value>
  </data>
  <data name="abbMap.Label" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="DefaultImageHeader.Text" xml:space="preserve">
    <value>DEFAULT MAP ICON IMAGE</value>
  </data>
  <data name="Directions" xml:space="preserve">
    <value>DIRECTIONS</value>
  </data>
  <data name="NoAddress" xml:space="preserve">
    <value>A street address could not be found.  Please add more information and try again.</value>
  </data>
  <data name="sbLandmarks.Label" xml:space="preserve">
    <value>show landmarks</value>
  </data>
  <data name="sbPedestrianFeatures.Label" xml:space="preserve">
    <value>show pedestrian features</value>
  </data>
  <data name="sbTraffic.Label" xml:space="preserve">
    <value>show traffic flow</value>
  </data>
  <data name="ShowLandmarks" xml:space="preserve">
    <value>show landmarks</value>
  </data>
  <data name="ShowPedestrianFeatures" xml:space="preserve">
    <value>show pedestrian features</value>
  </data>
  <data name="ShowTrafficFlow" xml:space="preserve">
    <value>show traffic flow</value>
  </data>
  <data name="TotalLength" xml:space="preserve">
    <value>Total length (kilometers)</value>
  </data>
  <data name="TotalTime" xml:space="preserve">
    <value>Total estimated time (minutes)</value>
  </data>
  <data name="TurnOffLandmarks" xml:space="preserve">
    <value>turn off landmarks</value>
  </data>
  <data name="TurnOffPedestrianFeatures" xml:space="preserve">
    <value>turn off pedestrian features</value>
  </data>
  <data name="TurnOffTrafficFlow" xml:space="preserve">
    <value>turn off traffic flow</value>
  </data>
  <data name="NoAddressTitle" xml:space="preserve">
    <value>No Address Found</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value>SUMMARY</value>
  </data>
  <data name="tbGeopointToAddressHeader.Text" xml:space="preserve">
    <value>Touch the map to get an address</value>
  </data>
  <data name="tbMenuAddressToGeocodeDescription.Text" xml:space="preserve">
    <value>Uses Mapping Services to convert an address to a geographic location.</value>
  </data>
  <data name="tbMenuAddressToGeocodeTitle.Text" xml:space="preserve">
    <value>Geocoding</value>
  </data>
  <data name="tbMenuBasicMapDisplayDescription.Text" xml:space="preserve">
    <value>Shows a basic map centered around the user's current location.</value>
  </data>
  <data name="tbMenuBasicMapDisplayTitle.Text" xml:space="preserve">
    <value>Basic Map Display</value>
  </data>
  <data name="tbMenuControlsDescription.Text" xml:space="preserve">
    <value>Adds XAML controls to the map control.</value>
  </data>
  <data name="tbMenuControlsTitle.Text" xml:space="preserve">
    <value>Add Controls to a Map</value>
  </data>
  <data name="tbMenuCustomImageDescription.Text" xml:space="preserve">
    <value>Adds a custom MapIcon image to the map control.</value>
  </data>
  <data name="tbMenuCustomImageTitle.Text" xml:space="preserve">
    <value>Add an Image to a Map</value>
  </data>
  <data name="tbMenuDefaultImageDescription.Text" xml:space="preserve">
    <value>Uses the Map Controls default MapIcon image to point to the user's current location.</value>
  </data>
  <data name="tbMenuDefaultImageTitle.Text" xml:space="preserve">
    <value>Default Map Image</value>
  </data>
  <data name="tbMenuDrivingRoutesDescription.Text" xml:space="preserve">
    <value>Calculates driving routes using optimizations, restrictions, and headings.  Shows the route in a map and shows turn by turn directs.</value>
  </data>
  <data name="tbMenuDrivingRoutesTitle.Text" xml:space="preserve">
    <value>Driving Routes</value>
  </data>
  <data name="tbMenuGeocodeToAddressDescription.Text" xml:space="preserve">
    <value>Uses Mapping Services to convert a geographic location to an address.</value>
  </data>
  <data name="tbMenuGeocodeToAddressTitle.Text" xml:space="preserve">
    <value>Reverse Geocoding</value>
  </data>
  <data name="tbMenuWalkingRoutesDescription.Text" xml:space="preserve">
    <value>Calculates walking routes.  Shows the route in a map and shows turn by turn directs.</value>
  </data>
  <data name="tbMenuWalkingRoutesTitle.Text" xml:space="preserve">
    <value>Walking Routes</value>
  </data>
  <data name="MenuHeader2.Text" xml:space="preserve">
    <value>Samples</value>
  </data>
  <data name="NoRoute" xml:space="preserve">
    <value>A route could not be calculated.</value>
  </data>
  <data name="NoRouteTitle" xml:space="preserve">
    <value>No Route Found</value>
  </data>
</root>