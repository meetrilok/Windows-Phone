//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Blend.SampleData.ListDataSource
{
	using System; 
	using System.ComponentModel;

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class ListDataSource { }
#else

	public class ListDataSource : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		public ListDataSource()
		{
			try
			{
				Uri resourceUri = new Uri("ms-appx:/SampleData/ListDataSource/ListDataSource.xaml", UriKind.RelativeOrAbsolute);
				Windows.UI.Xaml.Application.LoadComponent(this, resourceUri);
			}
			catch
			{
			}
		}

		private GroupCollection _Groups = new GroupCollection();

		public GroupCollection Groups
		{
			get
			{
				return this._Groups;
			}
		}
	}

	public class Group : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Title = string.Empty;

		public string Title
		{
			get
			{
				return this._Title;
			}

			set
			{
				if (this._Title != value)
				{
					this._Title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}

		private string _SubTitle = string.Empty;

		public string SubTitle
		{
			get
			{
				return this._SubTitle;
			}

			set
			{
				if (this._SubTitle != value)
				{
					this._SubTitle = value;
					this.OnPropertyChanged("SubTitle");
				}
			}
		}

		private Windows.UI.Xaml.Media.ImageSource _ItemImage = null;

		public Windows.UI.Xaml.Media.ImageSource ItemImage
		{
			get
			{
				return this._ItemImage;
			}

			set
			{
				if (this._ItemImage != value)
				{
					this._ItemImage = value;
					this.OnPropertyChanged("ItemImage");
				}
			}
		}

		private ItemCollection _Items = new ItemCollection();

		public ItemCollection Items
		{
			get
			{
				return this._Items;
			}
		}

		private string _TargetGroup = string.Empty;

		public string TargetGroup
		{
			get
			{
				return this._TargetGroup;
			}

			set
			{
				if (this._TargetGroup != value)
				{
					this._TargetGroup = value;
					this.OnPropertyChanged("TargetGroup");
				}
			}
		}
	}

	public class Item : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Title = string.Empty;

		public string Title
		{
			get
			{
				return this._Title;
			}

			set
			{
				if (this._Title != value)
				{
					this._Title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}

		private string _SubTitle = string.Empty;

		public string SubTitle
		{
			get
			{
				return this._SubTitle;
			}

			set
			{
				if (this._SubTitle != value)
				{
					this._SubTitle = value;
					this.OnPropertyChanged("SubTitle");
				}
			}
		}

		private Windows.UI.Xaml.Media.ImageSource _ItemImage = null;

		public Windows.UI.Xaml.Media.ImageSource ItemImage
		{
			get
			{
				return this._ItemImage;
			}

			set
			{
				if (this._ItemImage != value)
				{
					this._ItemImage = value;
					this.OnPropertyChanged("ItemImage");
				}
			}
		}

		private string _TargetGroup = string.Empty;

		public string TargetGroup
		{
			get
			{
				return this._TargetGroup;
			}

			set
			{
				if (this._TargetGroup != value)
				{
					this._TargetGroup = value;
					this.OnPropertyChanged("TargetGroup");
				}
			}
		}
	}

	public class ItemCollection : System.Collections.ObjectModel.ObservableCollection<Item>
	{ 
	}

	public class GroupCollection : System.Collections.ObjectModel.ObservableCollection<Group>
	{ 
	}
#endif
}
